[{"categories":null,"content":" .email-form { display: flex; justify-content: center; column-gap: 20px; } .email-form-column { display: flex; flex-direction: column; row-gap: 10px; } CONTACT Github Â  https://github.com/Merrit Twitter Â  https://twitter.com/Merrittkr Email Â  Your email: Your message: Send ","date":"0001-01-01","objectID":"/contact/:0:0","tags":null,"title":"","uri":"/contact/"},{"categories":null,"content":" Hi, my name is Kristen. ðŸ‘‹ I am a self-taught software developer and I have a great passion for open source / libre projects. I have devoted countless hours towards creating and improving projects to benefit everyone. I truly hope that people will find my work to be useful! ðŸ˜ƒ It takes a huge amount of time to develop open-source projects that are given away for free, so any support of my past and future works is greatly appreciated! Become a Patron! kofiwidget2.init('Support Me on Ko-fi', '#29abe0', 'W7W73NLKG');kofiwidget2.draw(); ","date":"0001-01-01","objectID":"/support/:0:0","tags":null,"title":"","uri":"/support/"},{"categories":null,"content":"A user-friendly API for KDEâ€™s KRunner application. Improves on the standard KRunner API by offering a user-friendly language (Dart) along with type safety, null safety, named parameters, and extensives documentation and examples. Languages Dart Website Github ","date":"0001-01-01","objectID":"/portfolio/krunner/:0:0","tags":null,"title":"KRunner API","uri":"/portfolio/krunner/"},{"categories":null,"content":"Suspend games and applications. Nyrna is a cross-platform desktop application written with Flutter that allows one to suspend and resume applications. The design has intentionally been kept simple and minimalist as this software is expected to be used by anyone, including those who are not â€˜tech-savvyâ€™. Working with Flutter to create Nyrna has been excellent, as even while considered an alpha level feature the desktop software creation experience has been quite exceptional. On Linux the project is quite straight forward, making use of regular system calls to get process information, suspend, and resume. Windows on the other hand required a great deal more attention, as I have found throughout the project that the win32 API does not provide a meaningful interface with which to check the status of a process, nor to send a signal like one familiar with Linux might expect. I ended up writing several direct wrappers using dart:ffi - the dart Foreign Function Interface that facilitates C interop, in order to make calls to the win32 API directly from native Dart code, as well as creating a small library specifically to handle the calls to ntdll.dll in order to use the undocumented NtSuspendProcess() and NtResumeProcess() functions. While not easy or straightforward, the challenge presented here was quite interesting and rewarding - and I enjoyed learning more about systems level programming and APIs. Languages Flutter / Dart Small amount of C++ via the C interop library dart:fii Platforms Linux Windows Packaging Linux: AppImage Portable Snap Windows: Installer exe Portable winget Website Github ","date":"0001-01-01","objectID":"/portfolio/nyrna/:0:0","tags":null,"title":"Nyrna","uri":"/portfolio/nyrna/"},{"categories":null,"content":"A shopping list that syncronizes between devices using Firebase. Includes the ability to share a list with another user that will sync seamlessly between them. In ongoing development. Platforms Android iOS Web Linux, Windows \u0026 Mac support when Firebase is available for desktop Languages Flutter / Dart Website Github ","date":"0001-01-01","objectID":"/portfolio/shopping_list/:0:0","tags":null,"title":"Shopping List","uri":"/portfolio/shopping_list/"},{"categories":null,"content":"Privacy Policy Last updated: May 20, 2021 This Privacy Policy describes Our policies and procedures on the collection, use and disclosure of Your information when You use the Service and tells You about Your privacy rights and how the law protects You. We use Your Personal data to provide and improve the Service. By using the Service, You agree to the collection and use of information in accordance with this Privacy Policy. This Privacy Policy has been created with the help of the Privacy Policy Generator. Interpretation and Definitions Interpretation The words of which the initial letter is capitalized have meanings defined under the following conditions. The following definitions shall have the same meaning regardless of whether they appear in singular or in plural. Definitions For the purposes of this Privacy Policy: Account means a unique account created for You to access our Service or parts of our Service. Affiliate means an entity that controls, is controlled by or is under common control with a party, where \"control\" means ownership of 50% or more of the shares, equity interest or other securities entitled to vote for election of directors or other managing authority. Application means the software program provided by the Company downloaded by You on any electronic device, named Shopping Organized Company (referred to as either \"the Company\", \"We\", \"Us\" or \"Our\" in this Agreement) refers to Shopping Organized. Cookies are small files that are placed on Your computer, mobile device or any other device by a website, containing the details of Your browsing history on that website among its many uses. Country refers to: Ontario, Canada Device means any device that can access the Service such as a computer, a cellphone or a digital tablet. Personal Data is any information that relates to an identified or identifiable individual. Service refers to the Application or the Website or both. Service Provider means any natural or legal person who processes the data on behalf of the Company. It refers to third-party companies or individuals employed by the Company to facilitate the Service, to provide the Service on behalf of the Company, to perform services related to the Service or to assist the Company in analyzing how the Service is used. Third-party Social Media Service refers to any website or any social network website through which a User can log in or create an account to use the Service. Usage Data refers to data collected automatically, either generated by the use of the Service or from the Service infrastructure itself (for example, the duration of a page visit). Website refers to Shopping Organized, accessible from https://shopping.merritt.codes You means the individual accessing or using the Service, or the company, or other legal entity on behalf of which such individual is accessing or using the Service, as applicable. Collecting and Using Your Personal Data Types of Data Collected Personal Data While using Our Service, We may ask You to provide Us with certain personally identifiable information that can be used to contact or identify You. Personally identifiable information may include, but is not limited to: Usage Data Usage Data Usage Data is collected automatically when using the Service. Usage Data may include information such as Your Device's Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that You visit, the time and date of Your visit, the time spent on those pages, unique device identifiers and other diagnostic data. When You access the Service by or through a mobile device, We may collect certain information automatically, including, but not limited to, the type of mobile device You use, Your mobile device unique ID, the IP address of Your mobile device, Your mobile operating system, the type of mobile Internet browser You use, unique device identifiers and other diagnostic data. We may also collect information that Your browser sends whenever You visit","date":"0001-01-01","objectID":"/shopping_privacy/:0:0","tags":null,"title":"Shopping Organized","uri":"/shopping_privacy/"},{"categories":null,"content":"Easily compare items when shopping \u0026 find the best value Web bargain.merritt.codes Windows Installer Portable Linux AppImage Portable Android Google Play APK Source code available on GitHub. ","date":"0001-01-01","objectID":"/bargain/:0:0","tags":null,"title":"Unit Bargain Hunter","uri":"/bargain/"},{"categories":null,"content":"A quick and simple way to verify which is the best value when comparing what to shop for. Unit Bargain Hunter is a multi-platform application that allows the user to compare multiple items when shopping by item count, volume, or weight along with the price of each item in order to easily find which is the best value and by how much. Unit Bargain Hunter is a relatively straight-forward app with a light / dark theme toggle and using bloc for state management. Languages Flutter \u0026 Dart Platforms Windows Linux Web Android iOS and macOS should work as well given a Mac to compile on \u0026 a developer account to distribute them. Packaging Linux: AppImage Portable Windows: Installer exe Portable winget Android: Google Play store APK Website Github ","date":"0001-01-01","objectID":"/portfolio/bargain/:0:0","tags":null,"title":"Unit Bargain Hunter","uri":"/portfolio/bargain/"}]